# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present
      - run: npm run test
  push_to_registry:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      docker_image_tagged: ${{ steps.vars.outputs.docker_image_tagged }}
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "docker_image_tagged=ismael3s/CityNexus.Notifications:$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        
      - name: Check outputs
        run: echo ${{ steps.vars.outputs.sha_short }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ steps.vars.outputs.sha_short }}
          context: .
          file: ./Dockerfile
